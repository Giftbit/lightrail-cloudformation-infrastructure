AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Logstash"

Parameters:
  EnvironmentName:
    Type: String
    Description: The Name of the Environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  UserIdsToGrantKibanaFullAccess:
    Type: String
    Description: >
      Comma separated list of AWS UserIDs to grant Full Access
      (See http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#policy-vars-infotouse)
    Default: ""
    AllowedPattern: (([A-Z0-9]+(:\*)?|\d{12}),)*([A-Z0-9]+(:\*)?|\d{12})|
  UserIdsToGrantECRFullAccess:
    Type: String
    Description: >
      Comma separated list of AWS UserIDs to grant Read Access
      (See http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#policy-vars-infotouse)
    Default: ""
    AllowedPattern: (\d{12},)+\d{12}|
  NonEmergencyAlertsSnsArn:
    Type: String
    Description: The ARN for the SNS Topic to notify on Non Emergency Events
    AllowedPattern: arn:aws:sns:[a-z0-9-]+:\d{12}:[a-zA-Z0-9_-]+

Conditions:
  ShouldCreateECRRepository: !Equals [!Ref EnvironmentName, Prod]
  ShouldConfigureECRAccess: !Not [!Equals [!Ref UserIdsToGrantECRFullAccess, ""]]
  ShouldConfigureKibanaFullAccess: !Not [!Equals [!Ref UserIdsToGrantKibanaFullAccess, ""]]
  ShouldCreateKibanaInstance: !Not [!Equals [!Ref EnvironmentName, Dev]]

Resources:
  Kibana:
    Type: AWS::Elasticsearch::Domain
    Condition: ShouldCreateKibanaInstance
    Properties:
      # DomainName must be less than 28 Characters and match [a-z][a-z0-9\-]+
      DomainName: "lightrail"
      ElasticsearchClusterConfig:
        InstanceCount: 1
        InstanceType: m3.medium.elasticsearch
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 100
        VolumeType: gp2
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: "*"
            Action: es:*
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/lightrail/*"
            Condition:
              IpAddress:
                aws:SourceIp:
                  - "184.69.186.114"
          - !If
            - ShouldConfigureKibanaFullAccess
            -
              Effect: Allow
              Action:
                - es:*
              Principals:
                AWS: !Split [",", !Ref UserIdsToGrantKibanaFullAccess]
              Resource:
                - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/lightrail/*"
            - !Ref AWS::NoValue

  # Logstash ECR Repository
  EcrRepo:
    Type: AWS::ECR::Repository
    Condition: ShouldCreateECRRepository
    Properties:
      RepositoryPolicyText: !If
        - ShouldConfigureECRAccess
        -
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              AWS: !Split [",", UserIdsToGrantECRFullAccess]
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:DescribeRepositories
              - ecr:GetRepositoryPolicy
              - ecr:ListImages
        - !Ref AWS::NoValue

  LogGroup:
    Type: AWS::Logs::LogGroup
  MetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogGroup
      FilterPattern: ""
      MetricTransformations:
        -
          MetricName: LogCount
          MetricNamespace: !Sub "Lightrail/${EnvironmentName}"
          MetricValue: 1
  LogAlarm:
    # If the logstash service is firing a lot of logs for itself, then something is going wrong
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 2
      MetricName: LogCount
      Namespace: !Sub "Lightrail/${EnvironmentName}"
      Period: 120
      Statistic: Sum
      Threshold: 5
      AlarmActions:
        - !Ref NonEmergencyAlertsSnsArn
      OKActions:
        - !Ref NonEmergencyAlertsSnsArn
      AlarmDescription: !Sub >
        The ${EnvironmentName} Logstash agent is creating an irregularly high number of logs. This usually indicates
        that it is in an error state.

Outputs:
  KibanaDomain:
    Description: The Domain Endpoint for the Kibana Domain
    Condition: ShouldCreateKibanaInstance
    Value: !GetAtt Kibana.DomainEndpoint
  KibanaArn:
    Description: The Domain ARN for the Kibana Domain
    Condition: ShouldCreateKibanaInstance
    Value: !GetAtt Kibana.DomainArn
