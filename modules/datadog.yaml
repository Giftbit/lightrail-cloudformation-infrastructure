AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail DataDog"

Parameters:
  EnvironmentName:
    Type: String
    Description: The Name of the Environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  ParentStackName:
    Type: String
    Description: The Name of the parent stack. This is normally dev, staging or production.
  AccountsToGrantEcrReadAccess:
    Type: String
    Description: Comma separated list of AWS Account IDs to grant Read Access
    Default: ""
    AllowedPattern: (\d{12}(,\d{12})*)?
  GroupsToGrantDeployAccess:
    Type: String
    Description: A Comma Separated List of Groups to grant ability to deploy this service
    AllowedPattern: ((^|,)[a-zA-Z0-9+=.@_-]+)*

Mappings:
  Dev:
    global:
      AccessRoleExternalId: 309354d45e754706aebe1c1ca11cdfa6
    us-west-2:
      EcrRepoOverride: ""  # Intentionally left blank, required but should not be used
      EcrRepoArnOverride: ""  # Intentionally left blank, required but should not be used
  Staging:
    global:
      AccessRoleExternalId: 661edc0984c94b5dbfdecb5845cd999c
    us-west-2:
      EcrRepoOverride: 757264843183.dkr.ecr.us-west-2.amazonaws.com/dev-l-ecrre-10nol5b818vc4
      EcrRepoArnOverride: arn:aws:ecr:us-west-2:757264843183:repository/dev-l-ecrre-10nol5b818vc4
  Production:
    global:
      AccessRoleExternalId: 2948b54ed84046baa527c7a1e6f872b8
    us-west-2:
      EcrRepoOverride: 757264843183.dkr.ecr.us-west-2.amazonaws.com/dev-l-ecrre-10nol5b818vc4
      EcrRepoArnOverride: arn:aws:ecr:us-west-2:757264843183:repository/dev-l-ecrre-10nol5b818vc4

Conditions:
  ShouldCreateECRRepository: !Equals [!Ref EnvironmentName, Dev]
  RegionIsUsWest2: !Equals [!Ref "AWS::Region", "us-west-2"]
  ShouldConfigureECRAccess: !Not [!Equals [!Ref AccountsToGrantEcrReadAccess, ""]]
  ShouldConfigureDeployAccess: !Not [!Equals [!Ref GroupsToGrantDeployAccess, ""]]

Resources:
  # DataDog ECR Repository
  EcrRepo:
    Type: AWS::ECR::Repository
    Condition: ShouldCreateECRRepository
    Properties:
      RepositoryPolicyText: !If
        - ShouldConfigureECRAccess
        -
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                AWS: !Split [",", !Ref AccountsToGrantEcrReadAccess]
              Action:
                - ecr:GetDownloadUrlForLayer
                - ecr:BatchGetImage
                - ecr:BatchCheckLayerAvailability
                - ecr:DescribeRepositories
                - ecr:ListImages
        - !Ref AWS::NoValue

  DataDogAccessRole:
    Type: AWS::IAM::Role
    Condition: RegionIsUsWest2
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              AWS:
                - arn:aws:iam::464622532012:root
            Condition:
              StringEquals:
                "sts:ExternalId":
                  !FindInMap [!Ref EnvironmentName, global, AccessRoleExternalId]
      Policies:
        -
          PolicyName: DataDogReadOnlyAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - autoscaling:Describe*
                  - budgets:ViewBudget
                  - cloudtrail:DescribeTrails
                  - cloudtrail:GetTrailStatus
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                  - codedeploy:List*
                  - codedeploy:BatchGet*
                  - dynamodb:list*
                  - dynamodb:describe*
                  - ec2:Describe*
                  - ec2:Get*
                  - ecs:Describe*
                  - ecs:List*
                  - elasticache:Describe*
                  - elasticache:List*
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DescribeTags
                  - elasticloadbalancing:Describe*
                  - elasticmapreduce:List*
                  - elasticmapreduce:Describe*
                  - es:ListTags
                  - es:ListDomainNames
                  - es:DescribeElasticsearchDomains
                  - kinesis:List*
                  - kinesis:Describe*
                  - lambda:List*
                  - logs:Get*
                  - logs:Describe*
                  - logs:FilterLogEvents
                  - logs:TestMetricFilter
                  - rds:Describe*
                  - rds:List*
                  - route53:List*
                  - s3:GetBucketTagging
                  - s3:ListAllMyBuckets
                  - ses:Get*
                  - sns:List*
                  - sns:Publish
                  - sqs:ListQueues
                  - support:*
                  - tag:getResources
                  - tag:getTagKeys
                  - tag:getTagValues
                Resource: "*"

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              AWS:
                - !Ref "AWS::AccountId"  # Allow this role to be assumed from the Current Account with MFA
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": true
      Policies:
        -
          PolicyName: CloudFormationUpdateAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                Resource:
                  - !If
                    - ShouldCreateECRRepository
                    - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepo}"
                    - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoArnOverride]
              -
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ParentStackName}/*"
              -
                Effect: Allow
                Action:
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:Describe*
                  - ecs:CreateService
                  - ecs:UpdateService
                  - ecs:DeleteService
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - ecs:ListTasks
                Resource: "*"

  DeploymentAccessPolicy:
    Type: AWS::IAM::Policy
    Condition: ShouldConfigureDeployAccess
    Properties:
      Groups: !Split [",", !Ref GroupsToGrantDeployAccess]
      PolicyName: LogstashDeployAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !GetAtt DeploymentRole.Arn

Outputs:
  EcrRepo:
    Description: The Codebuild accessible docker image reference
    Value: !If
      - ShouldCreateECRRepository
      - !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepo}"
      - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoOverride]
  EcrRepoArn:
    Description: The Codebuild accessible docker image reference
    Value: !If
      - ShouldCreateECRRepository
      - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepo}"
      - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoArnOverride]
  DeploymentRoleArn:
    Description: The Arn of the Deployment Role
    Value: !GetAtt DeploymentRole.Arn
