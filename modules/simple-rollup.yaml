Description: Simple Rollup helper module

Parameters:
  EnvironmentName:
    Type: String
    Description: Please select your environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  ProjectName:
    Type: String
    Description: The name of the project being built.  This name will be used on a number of resources.
  SecureConfigBucket:
    Type: String
    Description: The Name of the Configuration Bucket
  SecureConfigKmsArn:
    Type: String
    Description: The ARN of the Configuration Bucket Encryption Key
    AllowedPattern: arn:aws:kms:[a-z0-9-]+:\d{12}:key/[a-z0-9-]+
  SecureConfigKeyDataDog:
    Type: String
    Description: The Name of the DataDog Configuration File in the Configuration Bucket
  SecureConfigKeyJwt:
    Type: String
    Description: The Name of the JWT Configuration File in the Configuration Bucket
  SecureConfigKeyRoleDefinitions:
    Type: String
    Description: The Name of the Role Defintions Configuration File in the Configuration Bucket
  KinesisStreamArn:
    Type: String
    Description: ARN of the Kinesis stream
    AllowedPattern: arn:aws:kinesis:[a-z0-9-]+:\d{12}:stream/[A-Za-z0-9._-]+
  MessageBucket:
    Type: String
    Description: Name of the S3 bucket holding historical kinesis stream events
    AllowedPattern: \S+
  MessageBucketKmsArn:
    Type: String
    Description: ARN of the KMS key securing the MessageBucket
    AllowedPattern: arn:aws:kms:[a-z0-9-]+:\d{12}:key/[a-z0-9-]+
  GitHubOAuthToken:
    Type: String
    Description: GitHub oauth token.  This user must have admin access to the repo.
    Default: "****"
    NoEcho: true
  CodeBuildImageNodeSSH:
    Type: String
    Description: Name of the docker image to build from.
    Default: ""
  CiKeysAccessRoleArn:
    Type: String
    Description: ARN for the role that can access our CI SSH keys bucket.
    Default: ""
  CiKeysBucketName:
    Type: String
    Description: S3 bucket with our CI SSH keys.
    Default: ""

Mappings:
  Dev:
    us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      Capacity: low
      RoleName: dev-SimpleRollup-RestFunctionRole-UY3YFU4XT00Q
      Endpoint: s6tkfuiyga.execute-api.us-west-2.amazonaws.com
  Staging:
    us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      Capacity: low
      RoleName: staging-SimpleRollup-RestFunctionRole-UMGA0LJAWL37
      Endpoint: qq578kbti9.execute-api.us-west-2.amazonaws.com
  Production:
    us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      Capacity: high
      RoleName: production-SimpleRollup-RestFunctionRole-1WHS2OKB6RF1L
      Endpoint: cky1xydze9.execute-api.us-west-2.amazonaws.com

Resources:
  NoopBucket: # this was the closest I could find to a Noop. A resource is required.
    Type: AWS::S3::Bucket
#  CI:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-simple-rollup/d958a08/infrastructure/ci.yaml
#      Parameters:
#        ProjectParameterOverrides: !Sub
#          - >
#            {
#              "SecureConfigBucket": "${SecureConfigBucket}",
#              "SecureConfigKmsArn": "${SecureConfigKmsArn}",
#              "SecureConfigKeyJwt": "${SecureConfigKeyJwt}",
#              "SecureConfigKeyRoleDefinitions": "${SecureConfigKeyRoleDefinitions}",
#              "SecureConfigKeyDataDog": "${SecureConfigKeyDataDog}",
#              "KinesisStreamArn": "${KinesisStreamArn}",
#              "MessageBucket": "${MessageBucket}",
#              "MessageBucketKmsArn": "${MessageBucketKmsArn}",
#              "Capacity": "${Capacity}"
#            }
#          -
#            Capacity: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", Capacity]
#        GitHubBranch: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", GitHubBranch]
#        GitHubBranchDest: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", GitHubBranchDest]
#        GitHubOAuthToken: !Ref GitHubOAuthToken
#        CodeBuildImageNodeSSH: !Ref CodeBuildImageNodeSSH
#        CiKeysAccessRoleArn: !Ref CiKeysAccessRoleArn
#        CiKeysBucketName: !Ref CiKeysBucketName
#        ProjectName: !Ref ProjectName

Outputs:
  RoleName:
    Value: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", RoleName]
  Endpoint:
    Value: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", Endpoint]
