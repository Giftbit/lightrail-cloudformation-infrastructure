AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Services"

Parameters:
  EnvironmentName:
    Type: String
    Description: The Name of the Environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  ParentStackName:
    Type: String
    Description: The Name of the parent stack. This is normally dev, staging or production.
  ConfigurationBucketArn:
    Type: String
    Description: The ARN of the Configuration Bucket
    AllowedPattern: arn:aws:s3:::[A-Za-z0-9._-]+
  SecureConfigKmsArn:
    Type: String
    Description: The ARN of the Configuration Bucket Encryption Key
    AllowedPattern: arn:aws:kms:[a-z0-9-]+:\d{12}:key/[a-z0-9-]+
  SecureDownloadBucketArn:
    Type: String
    Description: The ARN of the Secure Download Bucket
    AllowedPattern: arn:aws:s3:::[A-Za-z0-9._-]+
  SecureDownloadBucketKeyArn:
    Type: String
    Description: The ARN of the Secure Download Bucket Encryption Key
    AllowedPattern: arn:aws:kms:[a-z0-9-]+:\d{12}:key/[a-z0-9-]+
  EmailDomainName:
    Type: String
    Description: The Domain name to use for Email. Should be set up with SES already.
    Default: ""
  KinesisStreamArn:
    Type: String
    Description: The ARN of the Event Kinesis Stream
    AllowedPattern: arn:aws:kinesis:[a-z0-9-]+:\d{12}:stream/[A-Za-z0-9._-]+
  AccountsToGrantEcrReadAccess:
    Type: String
    Description: Comma separated list of AWS Account IDs to grant ECR Read Access
    Default: ""
    AllowedPattern: (\d{12}(,\d{12})*)?
  GroupsToGrantDeployAccess:
    Type: String
    Description: A Comma Separated List of Groups to grant ability to deploy this service
    AllowedPattern: ((^|,)[a-zA-Z0-9+=.@_-]+)*
  RdsInstanceClass:
    Type: String
    Description: The Instance Type to use for the RDS Instance
    Default: "db.t2.medium"
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.m3.medium
      - db.m4.large
      - db.m4.xlarge
  RdsInstanceAllocation:
    Type: Number
    Description: The amount of storage to allocate.
    Default: 100
    MinValue: 100
  RdsMultiAZ:
    Type: String
    Description: Should the instance be MultiAZ
    AllowedValues:
      - true
      - false
  RdsSnapshotId:
    Type: String
    Description: The RDS Snapshot to create the database from (optional)
    Default: ""
  VpcRdsSubnetIds:
    Type: String
    Description: The RDS Subnets from the VPC
  VpcHostedZoneId:
    Type: String
    Description: The ID of the Route53 Hosted Zone
  VpcRdsSecurityGroupIds:
    Type: String
    Description: The comma separated list of Security Group Ids
  LoadBalancingServiceRoleArn:
    Type: String
    Description: The Service Role Arn for load balancing
    AllowedPattern: arn:aws:iam::\d{12}:role/[A-Za-z0-9._-]+

Mappings:
  Dev:
    us-west-2:
      EcrRepoOverride: ""  # Intentionally left blank, required but should not be used
      EcrRepoArnOverride: ""  # Intentionally left blank, required but should not be used
  Staging:
    us-west-2:
      EcrRepoOverride: "757264843183.dkr.ecr.us-west-2.amazonaws.com/dev-l-ecrre-1flkl8cn2yhjp"
      EcrRepoArnOverride: "arn:aws:ecr:us-west-2:757264843183:repository/dev-l-ecrre-1flkl8cn2yhjp"
  Production:
    us-west-2:
      EcrRepoOverride: "757264843183.dkr.ecr.us-west-2.amazonaws.com/dev-l-ecrre-1flkl8cn2yhjp"
      EcrRepoArnOverride: "arn:aws:ecr:us-west-2:757264843183:repository/dev-l-ecrre-1flkl8cn2yhjp"

Conditions:
  ShouldConfigureSes: !Not [!Equals [!Ref EmailDomainName, ""]]
  ShouldCreateECRRepository: !Equals [!Ref EnvironmentName, Dev]
  ShouldUseEcrRepoOverride: !Not [!Equals [!Ref EnvironmentName, Dev]]
  ShouldConfigureAccountECRAccess: !Not [!Equals [!Ref AccountsToGrantEcrReadAccess, ""]]
  ShouldConfigureDeployAccess: !Not [!Equals [!Ref GroupsToGrantDeployAccess, ""]]
  ShouldCreateDatabaseFromSnapshot: !Not [!Equals [!Ref RdsSnapshotId, ""]]
  ShouldCreateEmptyDatabase: !Equals [!Ref RdsSnapshotId, ""]

Resources:
  EcrRepo:
    Type: AWS::ECR::Repository
    Condition: ShouldCreateECRRepository
    Properties:
      RepositoryPolicyText: !If
        - ShouldConfigureAccountECRAccess
        -
          Version: 2012-10-17
          Statement:
            -
              Sid: RepositoryAccess
              Effect: Allow
              Principal:
                AWS: !Split [",", !Ref AccountsToGrantEcrReadAccess]
              Action:
                - ecr:GetDownloadUrlForLayer
                - ecr:BatchGetImage
                - ecr:BatchCheckLayerAvailability
                - ecr:DescribeRepositories
                - ecr:ListImages
        - !Ref AWS::NoValue
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      Policies:
        -
          PolicyName: ServicesAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -  # Configuration Access
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetObjectAcl
                  - s3:GetObjectVersionAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Ref ConfigurationBucketArn
                  - !Sub "${ConfigurationBucketArn}/*"
              -  # Configuration Key Access
                Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:Decrypt
                Resource:
                  - !Ref SecureConfigKmsArn
              - !If  # SES Access
                - ShouldConfigureSes
                -
                  Effect: Allow
                  Action:
                    - ses:SendEmail
                    - ses:SendRawEmail
                  Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${EmailDomainName}"
                - !Ref "AWS::NoValue"
              -  # Kinesis Stream Producer Access
                Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:PutRecord*
                Resource:
                  - !Ref KinesisStreamArn
              -  # Secure Download Bucket Access
                Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject*
                Resource:
                  - !Ref SecureDownloadBucketArn
                  - !Sub "${SecureDownloadBucketArn}/*"
              -  # Secure Download Encryption Key Access
                Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource:
                  - !Ref SecureDownloadBucketKeyArn
              -  # Cloudwatch Access
                Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
  # Services RDS Instance
  RdsInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBSnapshotIdentifier: !If [ShouldCreateDatabaseFromSnapshot, !Ref RdsSnapshotId, !Ref "AWS::NoValue"]
      MasterUsername: !If [ShouldCreateEmptyDatabase, lightrail, !Ref "AWS::NoValue"]
      MasterUserPassword: !If [ShouldCreateEmptyDatabase, lightrail-20170606, !Ref "AWS::NoValue"]
      DBInstanceClass: !Ref RdsInstanceClass
      AllocatedStorage: !Ref RdsInstanceAllocation
      StorageType: gp2
      MultiAZ: !Ref RdsMultiAZ
      DBSubnetGroupName: !Ref RdsSubnetGroup
      VPCSecurityGroups: !Split [",", !Ref VpcRdsSecurityGroupIds]
      KmsKeyId: !Ref RdsEncryptionKey
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      PreferredBackupWindow: 09:17-09:47
      PreferredMaintenanceWindow: sun:06:57-sun:07:57
      Engine: mysql
      EngineVersion: 5.6.27
      CopyTagsToSnapshot: true
      OptionGroupName: default:mysql-5-6
      DBParameterGroupName: default.mysql5.6
      Tags:
        -
          Key: Name
          Value: !Sub "Lightrail ${EnvironmentName} Services RDS"
  RdsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "Lightrail ${EnvironmentName} RDS Encryption Key"
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
  RdsEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-RDS"
      TargetKeyId: !Ref RdsEncryptionKey
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub "Lightrail ${EnvironmentName} Subnet Group"
      SubnetIds: !Split [",", !Ref VpcRdsSubnetIds]
      Tags:
        -
          Key: Service
          Value: RDS
  RdsVpcZoneRecord:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: !Ref VpcHostedZoneId
      Name: lightrail-mysql.vpc.
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt RdsInstance.Endpoint.Address

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              AWS:
                - !Ref "AWS::AccountId"  # Allow this role to be assumed from the Current Account with MFA
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": true
      Policies:
        -
          PolicyName: CloudFormationUpdateAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ParentStackName}-Services/*"
              -
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                Resource:
                  - !If
                    - ShouldUseEcrRepoOverride
                    - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoArnOverride]
                    - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepo}"
              -
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplateSummary
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ParentStackName}/*"
              -
                Effect: Allow
                Action:
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:Describe*
                  - ecs:CreateService
                  - ecs:UpdateService
                  - ecs:DeleteService
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt Role.Arn
                  - !Ref LoadBalancingServiceRoleArn
              -
                Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                Resource:
                  - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${RdsInstance}"

  DeploymentAccessPolicy:
    Type: AWS::IAM::Policy
    Condition: ShouldConfigureDeployAccess
    Properties:
      Groups: !Split [",", !Ref GroupsToGrantDeployAccess]
      PolicyName: ServicesDeployAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !GetAtt DeploymentRole.Arn
          -
            Effect: Allow
            Action:
              - ecr:ListImages
            Resource:
              - !If
                - ShouldUseEcrRepoOverride
                - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoArnOverride]
                - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepo}"

Outputs:
  EcrRepo:
    Description: The Codebuild accessible docker image reference
    Value: !If
      - ShouldCreateECRRepository
      - !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepo}"
      - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoOverride]
  EcrRepoArn:
    Description: The Codebuild accessible docker image reference
    Value: !If
      - ShouldCreateECRRepository
      - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepo}"
      - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", EcrRepoArnOverride]
  RdsInstanceId:
    Description: The ID of the RDS Instance, so that we can check it's backup status
    Value: !Ref RdsInstance
  TaskRoleArn:
    Description: The ARN of the Tasks IAM Role
    Value: !GetAtt Role.Arn
  DeploymentRoleArn:
    Description: The Arn of the Deployment Role
    Value: !GetAtt DeploymentRole.Arn
