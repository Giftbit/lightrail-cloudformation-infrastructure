AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail React"

Parameters:
  EnvironmentName:
    Type: String
    Description: The Name of the Environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  AccountsToGrantBuildArtifactFullAccess:
    Type: String
    Description: Comma separated list of AWS Account IDs to grant Build Artifact Access
    Default: ""
    AllowedPattern: (\d{12}(,\d{12})*)?
  GroupsToGrantReactReadWrite:
    Type: String
    Description: The name of the groups to grant React read write access
    AllowedPattern: "([a-zA-Z0-9+=,.@_-]+(,[a-zA-Z0-9+=,.@_-]+)*)?"
  GroupsToGrantReactBuildArtifactReadOnly:
    Type: String
    Description: The name of the groups to grant React read access
    AllowedPattern: "([a-zA-Z0-9+=,.@_-]+(,[a-zA-Z0-9+=,.@_-]+)*)?"
  GroupsToGrantReactBuildArtifactReadWrite:
    Type: String
    Description: The name of the groups to grant React read/write access
    AllowedPattern: "([a-zA-Z0-9+=,.@_-]+(,[a-zA-Z0-9+=,.@_-]+)*)?"
  BuildArtifactBucketOverride:
    Type: String
    Description: (Optional) The React BuildArtifactBucket we should configure
    Default: ""

Conditions:
  ShouldConfigureBuildArtifactAccess: !Not [!Equals [!Ref AccountsToGrantBuildArtifactFullAccess, ""]]
  ShouldConfigureReactReadWriteAccess: !Not [!Equals [!Ref GroupsToGrantReactReadWrite, ""]]
  ShouldConfigureReactBuildArtifactReadOnlyAccess: !Not [!Equals [!Ref GroupsToGrantReactBuildArtifactReadOnly, ""]]
  ShouldConfigureReactBuildArtifactReadWriteAccess: !Not [!Equals [!Ref GroupsToGrantReactBuildArtifactReadWrite, ""]]
  OverrideBuildArtifactBucketIsSet: !Not [!Equals [!Ref BuildArtifactBucketOverride, ""]]

Resources:
  ReactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  ReactBucketPublicPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactBucket
      PolicyDocument:
        Statement:
          -  # Allow Public Reading of all resources
            Effect: Allow
            Action:
              - s3:Get*
            Resource:
              - !Sub "arn:aws:s3:::${ReactBucket}/*"
            Principal: "*"
  ReactBucketUpdatePolicy:
    Type: AWS::IAM::Policy
    Condition: ShouldConfigureReactReadWriteAccess
    Properties:
      PolicyName: ReactBucketReadWrite
      Groups: !Split [",", !Ref GroupsToGrantReactReadWrite]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucket*
              - S3:GetObject*
              - s3:PutObject*
              - s3:DeleteObject*
              - s3:ListBucketMultipartUploads
            Resource:
              - !Sub "arn:aws:s3:::${ReactBucket}"
              - !Sub "arn:aws:s3:::${ReactBucket}/*"
  BuildArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
  BuildArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: ShouldConfigureBuildArtifactAccess
    Properties:
      Bucket: !Ref BuildArtifactBucket
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetObject*
              - s3:GetBucketLocation
              - s3:PutObject*
            Principal:
              AWS: !Split [",", !Ref AccountsToGrantBuildArtifactFullAccess]
            Resource:
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}"
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}/*"
  ReactBuildArtifactReadWriteAccessPolicy:
    Type: AWS::IAM::Policy
    Condition: ShouldConfigureReactBuildArtifactReadWriteAccess
    Properties:
      PolicyName: ReactBucketReadWrite
      Groups: !Split [",", !Ref GroupsToGrantReactBuildArtifactReadWrite]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucket*
              - S3:GetObject*
              - s3:PutObject*
              - s3:DeleteObject*
              - s3:ListBucketMultipartUploads
            Resource:
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}"
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}/*"
              - !If
                - OverrideBuildArtifactBucketIsSet
                - !Sub "arn:aws:s3:::${BuildArtifactBucketOverride}"
                - !Ref AWS::NoValue
              - !If
                - OverrideBuildArtifactBucketIsSet
                - !Sub "arn:aws:s3:::${BuildArtifactBucketOverride}/*"
                - !Ref AWS::NoValue
  ReactBuildArtifactReadAccessPolicy:
    Type: AWS::IAM::Policy
    Condition: ShouldConfigureReactBuildArtifactReadOnlyAccess
    Properties:
      PolicyName: ReactBucketReadWrite
      Groups: !Split [",", !Ref GroupsToGrantReactBuildArtifactReadOnly]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucket*
              - S3:GetObject*
            Resource:
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}"
              - !Sub "arn:aws:s3:::${BuildArtifactBucket}/*"
              - !If
                - OverrideBuildArtifactBucketIsSet
                - !Sub "arn:aws:s3:::${BuildArtifactBucketOverride}"
                - !Ref AWS::NoValue
              - !If
                - OverrideBuildArtifactBucketIsSet
                - !Sub "arn:aws:s3:::${BuildArtifactBucketOverride}/*"
                - !Ref AWS::NoValue

Outputs:
  ReactBucketName:
    Description: The name of the React Bucket
    Value: !Ref ReactBucket
  ReactDomainName:
    Description: The Domain name to use for serving the React resources
    Value: !Sub "${ReactBucket}.s3-website-${AWS::Region}.amazonaws.com"
  ArtifactBucketName:
    Description: The name of the Build Artifact Bucket
    Value: !If [OverrideBuildArtifactBucketIsSet, !Ref BuildArtifactBucketOverride, !Ref BuildArtifactBucket]
