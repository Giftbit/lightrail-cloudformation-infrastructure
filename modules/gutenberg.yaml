Description: Gutenberg helper module

Parameters:
  EnvironmentName:
    Type: String
    Description: Please select your environment
    AllowedValues:
      - Dev
      - Staging
      - Production
  ProjectName:
    Type: String
    Description: The name of the project being built.  This name will be used on a number of resources.
  # SAM config
  LightrailDomain:
    Type: String
    Description: The domain of the Lightrail REST API
    AllowedPattern: (\w+\.)+\w{3}
  LightrailEventTopicArn:
    Type: String
    Description: Optional ARN of the SNS topic on Lightrail Events
    AllowedPattern: (arn:aws:sns:[a-zA-Z_0-9\-]+:\d{12}:[a-zA-Z_0-9+=,.@\-_/]+)?
    Default: ""
  SecureConfigBucket:
    Type: String
    Description: The Name of the Configuration Bucket
  SecureConfigKmsArn:
    Type: String
    Description: The ARN of the Configuration Bucket Encryption Key
    AllowedPattern: arn:aws:kms:[a-z0-9-]+:\d{12}:key/[a-z0-9-]+
  # CI config
  GitHubOAuthToken:
    Type: String
    Description: GitHub oauth token.  This user must have admin access to the repo.
    Default: "****"
    NoEcho: true
  CodeBuildImageNodeSSH:
    Type: String
    Description: Name of the docker image to build from.
    Default: ""
  CiKeysAccessRoleArn:
    Type: String
    Description: ARN for the role that can access our CI SSH keys bucket.
    Default: ""
  CiKeysBucketName:
    Type: String
    Description: S3 bucket with our CI SSH keys.
    Default: ""

Mappings:
  Dev:
    us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      Capacity: low
      RoleNames: dev-Gutenberg-RestFunctionRole-1M3F24PK6D0C3,dev-Gutenberg-EventsFunctionRole-RPXIWDPYOVP5
      Endpoint: 5t4x5i9e7e.execute-api.us-west-2.amazonaws.com
  Staging:
    us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      Capacity: low
      RoleNames: ""
      Endpoint: ""
  Production:
    us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      Capacity: high
      RoleNames: ""
      Endpoint: ""

Resources:
#  ## I'll need to add a secret encryption key.
#  DbEncryptionKey:
#    Type: AWS::KMS::Key
#    Properties:
#      Description: !Sub "${ProjectName} database encryption key"
#      KeyPolicy:
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Principal:
#              AWS:
#                !Sub "arn:aws:iam::${AWS::AccountId}:root"
#            Action:
#              - kms:*
#            Resource: "*"
#          - Effect: Allow
#            Principal:
#              AWS: "*"
#            Action:
#              - kms:Encrypt
#              - kms:Decrypt
#              - kms:ReEncrypt*
#              - kms:GenerateDataKey*
#              - kms:CreateGrant
#              - kms:ListGrants
#              - kms:DescribeKey
#            Resource: "*"
#            Condition:
#              StringEquals:
#                "kms:CallerAccount": !Ref "AWS::AccountId"
#                "kms:ViaService": !Sub "rds.${AWS::Region}.amazonaws.com"
#  EncryptionKeyAlias:
#    Type: AWS::KMS::Alias
#    Properties:
#      AliasName: !Sub "alias/${AWS::StackName}-DbEncryptionKey"
#      TargetKeyId: !Ref DbEncryptionKey
  CI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/internal-gutenberg/3084b41559be281c1962a697bdaf155440c81145/infrastructure/ci.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        ProjectParameterOverrides: !Sub
          - >
            {
                "Capacity": "${Capacity}",
                "LightrailDomain": "${LightrailDomain}",
                "LightrailEventTopicArn": "${LightrailEventTopicArn}",
                "SecureConfigBucket": "${SecureConfigBucket}",
                "SecureConfigKmsArn": "${SecureConfigKmsArn}"
            }
          - Capacity: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", Capacity]
        LightrailEventTopicArn: !Ref LightrailEventTopicArn
        GitHubOAuthToken: !Ref GitHubOAuthToken
        GitHubBranch: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", GitHubBranch]
        GitHubBranchDest: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", GitHubBranchDest]
        CiKeysAccessRoleArn: !Ref CiKeysAccessRoleArn
        CiKeysBucketName: !Ref CiKeysBucketName
        CodeBuildImageNodeSSH: !Ref CodeBuildImageNodeSSH
      Tags:
      - Key: Service
        Value: Gutenberg

Outputs:
  RoleNames:
    Value: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", RoleNames]
  Endpoint:
    Value: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", Endpoint]

