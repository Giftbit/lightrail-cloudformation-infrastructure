AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Stack"

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - Production
      - Staging
      - Dev
    Default: Dev
  ProductionAccountId:
    Type: String
    Description: The ID of the account to be considered Production
    Default: ""
    AllowedPattern: (\d{12})?
  StagingAccountId:
    Type: String
    Description: The ID of the account to be considered Staging
    Default: ""
    AllowedPattern: (\d{12})?
  DevAccountId:
    Type: String
    Description: The ID of the account to be considered Dev
    Default: ""
    AllowedPattern: (\d{12})?
  EncryptedGitHubOAuthToken:
    Type: String
    Description: GitHub OAuth Token. Used for CI Stacks to access GitHub Repos
    Default: "****"
    NoEcho: true
  DecryptionLambdaArn:
    Type: String
    Description: The ARN that encrypted parameters are passed with
    AllowedPattern: arn:aws:lambda:[a-z0-9-]+:\d{12}:function:[a-zA-Z0-9_-]+
  CloudFormationServiceRoleName:
    Type: String
    Description: >
      The name of the role that performs the CloudFormationServices, so that we can grant it access to
      the secure buckets to update policies, etc.

Mappings:
  Dev:
    us-west-2:
      CombinedEnvRegion: Dev-us-west-2
      ReactBuildArtifactBucketOverride: ""
      WidgetsBuildArtifactBucketOverride: ""
      SesDomainArns: ""
  Staging:
    us-west-2:
      CombinedEnvRegion: Staging-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      WidgetsBuildArtifactBucketOverride: dev-lightrailwidgets-elm57e2j-buildartifactbucket-k3bupw61zw36
      SesDomainArns: ""
  Production:
    us-west-2:
      CombinedEnvRegion: Production-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      WidgetsBuildArtifactBucketOverride: dev-lightrailwidgets-elm57e2j-buildartifactbucket-k3bupw61zw36
      SesDomainArns: ""
  SecureConfig:
    Keys:
      JWT: authentication_badge_key.json
      DataDog: datadog.json
      RoleDefinitions: RoleDefinitions.json
      AssumeStorageScopeToken: assumeStorageScopeToken.json
      AssumeGiftCardPurchaseToken: assumeGiftcardPurchaseToken.json
  Common:
    All:
      PathToMerchantSharedSecret: /v1/storage/jwtSecret
    Dev:
      DomainName: lightraildev.net
      EmailDomainName: lightraildev.net
    Staging:
      DomainName: lightrailstaging.net
      EmailDomainName: lightrailstaging.net
    Production:
      DomainName: lightrail.com
      EmailDomainName: lightrail.com
  CloudFront:
    # ACMCertificateArns are generated by running the certificates module in US-East-1.
    # WebAclArns are generated by creating the WebACL manually.
    # Both of these must be in the AWS Global region, which is US-East-1.
    Dev:
      ACMCertificateArn: arn:aws:acm:us-east-1:757264843183:certificate/7e8e0f5d-dc44-4a3d-904d-b012cf805df0
      StaticContentLambdaVersionedArn: arn:aws:lambda:us-east-1:757264843183:function:dev-StaticContentLambda-Lambda-1B8P08ADYM2UZ:24
      WebAclArn: arn:aws:wafv2:us-east-1:757264843183:global/webacl/ApiWebAcl/e22d1e00-1289-4651-8b3b-c65c605b4914
    Staging:
      ACMCertificateArn: arn:aws:acm:us-east-1:939876203001:certificate/8808bf24-2c01-4eea-b485-84d471cd71f8
      StaticContentLambdaVersionedArn: ""
      WebAclArn: arn:aws:wafv2:us-east-1:939876203001:global/webacl/ApiWebAcl/8262b86c-b6a6-408a-a43b-9206a1373fb4
    Production:
      ACMCertificateArn: arn:aws:acm:us-east-1:212888042843:certificate/bc99ec4e-9dea-462a-a52f-5dd4db9fe642
      StaticContentLambdaVersionedArn: ""
      WebAclArn: arn:aws:wafv2:us-east-1:212888042843:global/webacl/ApiWebAcl/852f27dd-7de4-42f5-9d84-f2564e637848

Conditions:
  RegionIsUSWest2: !Equals [!Ref "AWS::Region", us-west-2]
  RegionIsUSEast1: !Equals [!Ref "AWS::Region", us-east-1]
  EnvIsDev: !Equals [!Ref EnvironmentName, Dev]
  EnvIsDevAndRegionIsUSWest2: !And [{Condition: EnvIsDev}, {Condition: RegionIsUSWest2}]
  EnvIsNotDevAndRegionIsUSWest2: !And [!Not [{Condition: EnvIsDev}], {Condition: RegionIsUSWest2}]
  ProductionAccountIdProvided: !Not [!Equals [!Ref ProductionAccountId, ""]]
  StagingAccountIdProvided: !Not [!Equals [!Ref StagingAccountId, ""]]
  DevAccountIdProvided: !Not [!Equals [!Ref DevAccountId, ""]]

Resources:
  Groups:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2  # Users and groups are global, so we only want it in the primary region
    Properties:
      TemplateURL: ./modules/groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailAlertChannels:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/alert-sns.yaml
  LightrailDns:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dns-zone.yaml
      Parameters:
        DomainName: !FindInMap [Common, !Ref EnvironmentName, DomainName]
  LightrailDnsExternalServices:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dns-external-services.yaml
      Parameters:
        BaseDomain: !GetAtt LightrailDns.Outputs.HostedDomainName
  LightrailCertificates:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSEast1
    Properties:
      TemplateURL: ./modules/certificates.yaml
      Parameters:
        BaseDomain: !GetAtt LightrailDns.Outputs.HostedDomainName
  LightrailWaf:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSEast1
    Properties:
      TemplateURL: ./modules/waf.yaml
  LightrailCloudfront:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/cloudfront.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigureAliases: "yes"
        BaseDomainName: !FindInMap [Common, !Ref EnvironmentName, DomainName]
        StaticContentLambdaVersionedArn: !FindInMap [CloudFront, !Ref EnvironmentName, StaticContentLambdaVersionedArn]
        ViewerCertificateArn: !FindInMap [CloudFront, !Ref EnvironmentName, ACMCertificateArn]
        EdhiEndpoint: !GetAtt LightrailEdhi.Outputs.Endpoint
        GutenbergEndpoint: !GetAtt LightrailGutenberg.Outputs.Endpoint
        KvsEndpoint: !GetAtt LightrailKvs.Outputs.Endpoint
        ReactEndpoint: !GetAtt LightrailReact.Outputs.ReactDomainName
        RothschildEndpoint: !GetAtt LightrailRothschild.Outputs.Endpoint
        TurnkeyEndpoint: !GetAtt LightrailTurnkey.Outputs.Endpoint
        UserImageServingEndpoint: !GetAtt LightrailUserImageUpload.Outputs.BucketEndpoint
        UserImageUploadAuthServiceEndpoint: !GetAtt LightrailUserImageUpload.Outputs.ServiceEndpoint
        WebAclArn: !FindInMap [CloudFront, !Ref EnvironmentName, WebAclArn]
        WebsiteEndpoint: !GetAtt LightrailWebsite.Outputs.Domain
        WidgetsEndpoint: !GetAtt LightrailWidgets.Outputs.WidgetsDomainName
  LightrailEventEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "LightrailEventTopic encryption key"
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Ref "AWS::AccountId"
  LightrailEventTopic:
    Type: AWS::SNS::Topic
    Condition: RegionIsUSWest2
    Properties:
      DisplayName: Lightrail Events
      KmsMasterKeyId: !GetAtt LightrailEventEncryptionKey.Arn
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Product
          Value: Lightrail
        - Key: ShortName
          Value: LightrailEventTopic
  LightrailWebsite:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/website.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        GroupsToGrantWebsiteReadWrite: !Join
          - ","
          - - !GetAtt Groups.Outputs.MarkettingGroupName
            - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
  LightrailApiDocs:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/subdomain-website.yaml
      Parameters:
        DomainName: !GetAtt LightrailDns.Outputs.HostedDomainName
        SubdomainName: apidocs
        CertificateArn: !FindInMap [CloudFront, !Ref EnvironmentName, ACMCertificateArn]
        GroupsToGrantBucketReadWrite: !Join
          - ","
          - - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
            - !GetAtt Groups.Outputs.BackEndDevelopersGroupName
  LightrailReact:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/react-app.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BuildArtifactBucketOverride: !FindInMap
          - !Ref EnvironmentName
          - !Ref "AWS::Region"
          - ReactBuildArtifactBucketOverride
        GroupsToGrantReactReadWrite: !Join
          - ","
          - - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
        AccountsToGrantBuildArtifactReadAccess: !Join
          - ","
          - - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantReactBuildArtifactReadOnly: !If
          - EnvIsNotDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
          - ""
        GroupsToGrantReactBuildArtifactReadWrite: !If
          - EnvIsDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
          - ""
  LightrailWidgets:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/widgets.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BuildArtifactBucketOverride: !FindInMap
          - !Ref EnvironmentName
          - !Ref "AWS::Region"
          - WidgetsBuildArtifactBucketOverride
        GroupsToGrantWidgetsReadWrite: !Join
          - ","
          - - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
        AccountsToGrantBuildArtifactReadAccess: !Join
          - ","
          - - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantWidgetsBuildArtifactReadOnly: !If
          - EnvIsNotDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
          - ""
        GroupsToGrantWidgetsBuildArtifactReadWrite: !If
          - EnvIsDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.FrontEndDevelopersGroupName
          - ""
  LightrailSecureConfig:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/securable-bucket.yaml
  LightrailSecureConfigPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/bucket-securing-policy.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BucketName: !GetAtt LightrailSecureConfig.Outputs.BucketName
        EncryptionKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        UserIdsToGrantReadAccess: !Ref LightrailSecureConfigReadAccessRoleIdGrants
        UserIdsToGrantPolicyAdminAccess: !Ref LightrailSecureConfigPolicyAdminAccessRoleIdGrants
  LightrailSecureConfigReadAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        - - !GetAtt LightrailEdhi.Outputs.RoleNames
          - !GetAtt LightrailGutenberg.Outputs.RoleNames
          - !GetAtt LightrailKvs.Outputs.RoleName
          - !GetAtt LightrailTurnkey.Outputs.RoleNames
          - !GetAtt LightrailRothschild.Outputs.RoleNames
          - !GetAtt LightrailUserImageUpload.Outputs.RoleName
  LightrailSecureConfigPolicyAdminAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        - - !Ref CloudFormationServiceRoleName
          - !If
            - EnvIsDev
            - DevLightrailInfrastructureCI-CloudFormationServiceRole
            - !Ref "AWS::NoValue"
  LightrailSecureDownload:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/securable-bucket.yaml
  LightrailSecureDownloadPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/bucket-securing-policy.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BucketName: !GetAtt LightrailSecureDownload.Outputs.BucketName
        EncryptionKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        UserIdsToGrantReadAccess: ""
        UserIdsToGrantReadWriteAccess: ""
        UserIdsToGrantPolicyAdminAccess: !Ref LightrailSecureDownloadPolicyAdminAccessRoleIdGrants
  LightrailSecureDownloadPolicyAdminAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        - - !Ref CloudFormationServiceRoleName
          - !If
            - EnvIsDev
            - DevLightrailInfrastructureCI-CloudFormationServiceRole
            - !Ref "AWS::NoValue"
  LightrailDatadog:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/datadog.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailEdhi:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/edhi.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-Edhi"
        LightrailDomain: !Sub "api.${LightrailDns.Outputs.HostedDomainName}"
        LightrailEmailDomain: !FindInMap [Common, !Ref EnvironmentName, EmailDomainName]
        LightrailWebappDomain: !Sub "www.${LightrailDns.Outputs.HostedDomainName}"
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        WebAclArn: !FindInMap [CloudFront, !Ref EnvironmentName, WebAclArn]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
      Tags:
        - Key: Service
          Value: Edhi
  LightrailGutenberg:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/gutenberg.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-Gutenberg"
        LightrailDomain: !Sub "api.${LightrailDns.Outputs.HostedDomainName}"
        LightrailEventTopicArn: !Ref LightrailEventTopic
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
      Tags:
        - Key: Service
          Value: Gutenberg
  LightrailKvs:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/kvs.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-Kvs"
        LightrailDomain: !Sub "api.${LightrailDns.Outputs.HostedDomainName}"
        PathToMerchantSharedSecret: !FindInMap [Common, All, PathToMerchantSharedSecret]
        SecureConfigKeyAssumeStorageScopeToken: !FindInMap [SecureConfig, Keys, AssumeStorageScopeToken]
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureConfigKeyJwt: !FindInMap [SecureConfig, Keys, JWT]
        SecureConfigKeyRoleDefinitions: !FindInMap [SecureConfig, Keys, RoleDefinitions]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
      Tags:
        - Key: Service
          Value: KVS
  LightrailTurnkey:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/turnkey.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-Turnkey"
        LightrailDomain: !Sub "api.${LightrailDns.Outputs.HostedDomainName}"
        LightrailWebappDomain: !Sub "www.${LightrailDns.Outputs.HostedDomainName}"
        EmailDomainName: !FindInMap [Common, !Ref EnvironmentName, EmailDomainName]
        PathToMerchantSharedSecret: !FindInMap [Common, All, PathToMerchantSharedSecret]
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureConfigKeyJwt: !FindInMap [SecureConfig, Keys, JWT]
        SecureConfigKeyAssumeGiftcardPurchaseToken: !FindInMap [SecureConfig, Keys, AssumeGiftCardPurchaseToken]
        SecureConfigKeyAssumeStorageScopeToken: !FindInMap [SecureConfig, Keys, AssumeStorageScopeToken]
        SecureConfigKeyRoleDefinitions: !FindInMap [SecureConfig, Keys, RoleDefinitions]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
      Tags:
        - Key: Service
          Value: Turnkey
  LightrailRothschild:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/rothschild.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-Rothschild"
        BastionHostAuthorizedUsersGroup: !GetAtt Groups.Outputs.BastionHostAccessGroupName
        LightrailDomain: !Sub "api.${LightrailDns.Outputs.HostedDomainName}"
        LightrailEventTopicArn: !Ref LightrailEventTopic
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        VpcUniqueNumber: 2
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
      Tags:
        - Key: Service
          Value: Rothschild
  LightrailUserImageUpload:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/user-image-upload.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Sub "${AWS::StackName}-UserImageUpload"
        SecureConfigBucket: !GetAtt LightrailSecureConfig.Outputs.BucketName
        SecureConfigKmsArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureConfigKeyJwt: !FindInMap [SecureConfig, Keys, JWT]
        SecureConfigKeyRoleDefinitions: !FindInMap [SecureConfig, Keys, RoleDefinitions]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        WebsiteDomainUrl: !Sub "https://www.${LightrailDns.Outputs.HostedDomainName}"
      Tags:
        - Key: Service
          Value: UserImageUpload
  LightrailDevArtifacts:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dev-artifacts.yaml

  UserAssumableRoles:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/user-assumable-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantCodePipelineApproverAccess: !GetAtt Groups.Outputs.BackEndDevelopersGroupName
        GroupsToGrantInfrastructureAdminAccess: !If [EnvIsDevAndRegionIsUSWest2, !GetAtt Groups.Outputs.BackEndDevelopersGroupName, !Ref "AWS::NoValue"]

  CIResources:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ci-common-resources.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantImageReadWriteAccess: !GetAtt Groups.Outputs.BackEndDevelopersGroupName
  SSM:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ssm.yaml

  RoleLookupRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: RoleAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource: "*"
  RoleLookupLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: >
        Backs a CloudFormation Custom Resource for looking up Role Unique IDs (useful in locking down buckets)
      Role: !GetAtt RoleLookupRole.Arn
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 15
      Code: ../res/role-id-lookup.zip  # https://github.com/Giftbit/role-id-lookup-custom-resource/blob/master/index.js
  GitHubOAuthToken:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref DecryptionLambdaArn
      EncryptedValue: !Sub "kms:${EncryptedGitHubOAuthToken}"

Outputs:
  AppDomain:
    Description: The App Domain
    Value: !GetAtt LightrailCloudfront.Outputs.AppDomain
  ApiDomain:
    Description: The API Domain
    Value: !GetAtt LightrailCloudfront.Outputs.ApiDomain
  WebsiteBucket:
    Description: The Website bucket for the Lightrail website
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailWebsite.Outputs.Bucket
  ReactBucketName:
    Description: The React bucket for the Lightrail React App
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailReact.Outputs.ReactBucketName
  ReactArtifactBucketName:
    Description: The Bucket to put the React Build Artifacts
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailReact.Outputs.ArtifactBucketName
