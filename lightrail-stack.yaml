AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Stack"

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - Production
      - Staging
      - Dev
    Default: Dev
  ProductionAccountId:
    Type: String
    Description: The ID of the account to be considered Production
    Default: ""
    AllowedPattern: (\d{12})?
  StagingAccountId:
    Type: String
    Description: The ID of the account to be considered Staging
    Default: ""
    AllowedPattern: (\d{12})?
  DevAccountId:
    Type: String
    Description: The ID of the account to be considered Dev
    Default: ""
    AllowedPattern: (\d{12})?
  GitHubOAuthToken:
    Type: String
    Description: GitHub OAuth Token. Used for CI Stacks to access GitHub Repos
    Default: "****"
    NoEcho: true
  CloudFormationServiceRoleName:
    Type: String
    Description: >
      The name of the role that performs the CloudFormationServices, so that we can grant it access to
      the secure buckets to update policies, etc.

Mappings:
  Dev:
    us-west-2:
      CombinedEnvRegion: Dev-us-west-2
      ReactBuildArtifactBucketOverride: ""
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn:
        arn:aws:acm:us-east-1:757264843183:certificate/5ac83a3b-1f05-4756-bd3a-3a4705846b53
      CredentialsRevocationCheckRoleName: "dev-Credentials-RestBadgeValidationLambdaRole-PX6EAOSRMU46"
      ServicesRoleName: "dev-LightrailServices-1D5YCESAG92B3-Role-1D1RKUNL3XBWH"
      BatchRoleName: "dev-LightrailBatch-15T0OX937Q0EO-Role-1ETHK95KYFQ02"
      CredentialsDestinationBranch: ""
      SimpleRollupDestinationBranch: ""
      SimpleRollupCapacity: low
      CardsSearchDestinationBranch: ""
      CardsSearchElasticSearchInstanceCount: 2
      CardsSearchElasticSearchInstanceType: t2.small.elasticsearch
      CardsSearchElasticSearchMasterInstanceType: none
  Staging:
    us-west-2:
      CombinedEnvRegion: Staging-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn: ""
      CredentialsRevocationCheckRoleName: ""
      ServicesRoleName: ""
      BatchRoleName: ""
      CredentialsDestinationBranch: ""
      SimpleRollupDestinationBranch: ""
      SimpleRollupCapacity: low
      CardsSearchDestinationBranch: ""
      CardsSearchElasticSearchInstanceCount: 2
      CardsSearchElasticSearchInstanceType: t2.small.elasticsearch
      CardsSearchElasticSearchMasterInstanceType: none
  Production:
    us-west-2:
      CombinedEnvRegion: Production-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn: ""
      CredentialsRevocationCheckRoleName: ""
      ServicesRoleName: ""
      BatchRoleName: ""
      CredentialsDestinationBranch: ""
      SimpleRollupDestinationBranch: ""
      SimpleRollupCapacity: high
      CardsSearchDestinationBranch: ""
      CardsSearchElasticSearchInstanceCount: 2
      CardsSearchElasticSearchInstanceType: t2.small.elasticsearch
      CardsSearchElasticSearchMasterInstanceType: t2.small.elasticsearch
  SecureConfig:
    FileNames:
      JWT: authentication_badge_key.json
      DataDog: datadog.json
  EcsCluster:
    Dev-us-west-2:
      InstanceType: t2.small
      MinInstances: 1
      MaxInstances: 3
      SSHKeyName: LightrailDevECS
      ScaleUpRecurrence: "0 15 * * MON-FRI"
      ScaleDownRecurrence: "0 3 * * TUE-SAT"
    Staging-us-west-2:
      InstanceType: t2.nano
      MinInstances: 1
      MaxInstances: 1
      SSHKeyName: LightrailStagingECS
      ScaleUpRecurrence: "0 15 * * MON-FRI"
      ScaleDownRecurrence: "0 3 * * TUE-SAT"
    Production-us-west-2:
      InstanceType: t2.nano
      MinInstances: 1
      MaxInstances: 1
      SSHKeyName: LightrailProductionECS
      ScaleUpRecurrence: ""
      ScaleDownRecurrence: ""
  Services:
    Dev-us-west-2:
      RdsSnapshotId: "test-account-20170727"
    Staging-us-west-2:
      RdsSnapshotId: ""
    Production-us-west-2:
      RdsSnapshotId: ""

Conditions:
  RegionIsUSWest2: !Equals [!Ref "AWS::Region", us-west-2]
  RegionIsUSEast1: !Equals [!Ref "AWS::Region", us-east-1]
  EnvIsDev: !Equals [!Ref EnvironmentName, Dev]
  EnvIsDevAndRegionIsUSWest2: !And [{Condition: EnvIsDev}, {Condition: RegionIsUSWest2}]
  EnvIsNotDevAndRegionIsUSWest2: !And [!Not [{Condition: EnvIsDev}], {Condition: RegionIsUSWest2}]
  ProductionAccountIdProvided: !Not [!Equals [!Ref ProductionAccountId, ""]]
  StagingAccountIdProvided: !Not [!Equals [!Ref StagingAccountId, ""]]
  DevAccountIdProvided: !Not [!Equals [!Ref DevAccountId, ""]]
  # yamllint disable-line rule:line-length
  CredentialsRevocationCheckRoleNameSet:
    !Not [!Equals [!FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CredentialsRevocationCheckRoleName], ""]]
  ServicesRoleNameSet: !Not [!Equals [!FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", ServicesRoleName], ""]]
  BatchRoleNameSet: !Not [!Equals [!FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", BatchRoleName], ""]]
Resources:
  Groups:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2  # Users and groups are global, so we only want it in the primary region
    Properties:
      TemplateURL: ./modules/groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailAlertChannels:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/alert-sns.yaml
  LightrailCertificates:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/certificates.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailCloudfront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/cloudfront.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        AppAliases: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", AppAliases]
        ApiAliases: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", ApiAliases]
        ViewerCertificateArn: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CloudFormationACMCertificateArn]
        WebsiteEndpoint: !GetAtt LightrailWebsite.Outputs.Domain
        ReactEndpoint: !GetAtt LightrailReact.Outputs.ReactDomainName
        ServicesEndpoint: "preprodhttpservices.giftbit.com"
        StatsEndpoint: "0dp3zkwhxe.execute-api.us-west-2.amazonaws.com"
        BatchEndpoint: "preprodbatchservice.giftbit.com"
        CardsSearchEndpoint: "9te30f224k.execute-api.us-west-2.amazonaws.com"
  LightrailWebsite:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/website.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        GroupsToGrantWebsiteReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.MarkettingGroupName
            - !GetAtt Groups.Outputs.DevelopersGroupName

  LightrailReact:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/react-app.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BuildArtifactBucketOverride: !FindInMap
          - !Ref EnvironmentName
          - !Ref "AWS::Region"
          - ReactBuildArtifactBucketOverride
        GroupsToGrantReactReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.DevelopersGroupName
        AccountsToGrantBuildArtifactReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantReactBuildArtifactReadOnly: !If
          - EnvIsNotDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
        GroupsToGrantReactBuildArtifactReadWrite: !If
          - EnvIsDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
  LightrailVPC:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/vpc.yaml
      Parameters:
        BastionHostAuthorizedUsersGroup: Developers
        EnvironmentName: !Ref EnvironmentName
        NatInstanceType: t2.nano
        VPCUniqueNumber: 1
  LightrailECSCluster:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ClusterName: !Sub "Lightrail-${AWS::StackName}"
        ClusterInstanceType: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - InstanceType
        ClusterMinInstances: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - MinInstances
        ClusterMaxInstances: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - MaxInstances
        ClusterSSHKeyName:
          !FindInMap [EcsCluster, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], SSHKeyName]
        ClusterScaleUpRecurrence: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - ScaleUpRecurrence
        ClusterScaleDownRecurrence: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - ScaleDownRecurrence
        ClusterSecurityGroupIDs: !GetAtt LightrailVPC.Outputs.EcsClusterInstanceSecurityGroupId
        VpcId: !GetAtt LightrailVPC.Outputs.VpcId
        VpcPublicSubnetIds: !GetAtt LightrailVPC.Outputs.PrivateSubnetIds
        Ec2SsmPolicyArn: !GetAtt SSM.Outputs.EC2PolicyArn
        EcrReposToGrantClusterAccess: !Join
          - ","
          -
            - !GetAtt LightrailServices.Outputs.EcrRepoArn
  LightrailLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/load-balancer.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcId: !GetAtt LightrailVPC.Outputs.VpcId
        SecurityGroups: !GetAtt LightrailVPC.Outputs.AlbSecurityGroupId
        SubnetIds: !GetAtt LightrailVPC.Outputs.PublicSubnetIds
        CertificateArn: !GetAtt LightrailCertificates.Outputs.CertificateArn
  LightrailSecureConfig:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        UserIdsToGrantReadAccess: !Join
          - ","
          -
            - !If
              - CredentialsRevocationCheckRoleNameSet
              - !Sub "${CredentialsRevocationCheckRoleId}:*"
              - !Ref "AWS::NoValue"
            - !If
              - ServicesRoleNameSet
              - !Sub "${ServicesRoleId}:*"
              - !Ref "AWS::NoValue"
            - !If
              - BatchRoleNameSet
              - !Sub "${BatchRoleId}:*"
              - !Ref "AWS::NoValue"
        UserIdsToGrantPolicyAdminAccess: !Join
          - ","
          -
            - !Sub "${CloudFormationServiceRoleId}:*"
            - !If
              - EnvIsDev
              - !Sub "${DevCloudFormationServiceRoleId}:*"
              - !Ref "AWS::NoValue"
  LightrailSecureDownload:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        UserIdsToGrantReadAccess: !Join
          - ","
          -
            - !If
              - ServicesRoleNameSet
              - !Sub "${ServicesRoleId}:*"
              - !Ref "AWS::NoValue"
        UserIdsToGrantReadWriteAccess: !Join
          - ","
          -
            - !If
              - BatchRoleNameSet
              - !Sub "${BatchRoleId}:*"
              - !Ref "AWS::NoValue"
        UserIdsToGrantPolicyAdminAccess: !Join
          - ","
          -
            - !Sub "${CloudFormationServiceRoleId}:*"
            - !If
              - EnvIsDev
              - !Sub "${DevCloudFormationServiceRoleId}:*"
              - !Ref "AWS::NoValue"
  LightrailEventStream:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/event-stream.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailLogstash:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/logstash.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NonEmergencyAlertsSnsArn: !GetAtt LightrailAlertChannels.Outputs.NonEmergencySNSArn
  LightrailDatadog:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/datadog.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailServices:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/services-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        SesDomainArns: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SesDomainArns]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        AccountsToGrantEcrReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantDeployAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        RdsInstanceClass: db.t2.small
        RdsInstanceAllocation: 100
        RdsMultiAZ: false
        RdsSnapshotId:
          !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RdsSnapshotId]
        VpcRdsSubnetIds: !GetAtt LightrailVPC.Outputs.RdsSubnetIds
        VpcHostedZoneId: !GetAtt LightrailVPC.Outputs.VpcHostedZoneId
        VpcRdsSecurityGroupIds: !GetAtt LightrailVPC.Outputs.RdsSecurityGroupId
        LoadBalancingServiceRoleArn: !GetAtt LightrailLoadBalancer.Outputs.EcsLoadBalancingServiceRoleArn
      Tags:
        -
          Key: Service
          Value: Services
  LightrailBatch:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/batch-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        SesDomainArns: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SesDomainArns]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        RemoteECRRepositoryArn: ""
      Tags:
        -
          Key: Service
          Value: Batch
  LightrailCredentials:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/credentials/5b24a34/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub >
          {
            "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
            "SecureConfigKMSArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}"
          }
        GitHubBranchDest: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CredentialsDestinationBranch]
        GitHubOAuthToken: !Ref GitHubOAuthToken
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-Credentials"
  LightrailSimpleRollup:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-simple-rollup/86d30a1/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "KinesisStreamArn": "${LightrailEventStream.Outputs.KinesisStreamArn}",
              "MessageBucket": "${LightrailEventStream.Outputs.DataBucketName}",
              "MessageBucketKmsArn": "${LightrailEventStream.Outputs.EncryptionKeyArn}",
              "Capacity": "${Capacity}"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
            Capacity: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SimpleRollupCapacity]
        GitHubBranchDest: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SimpleRollupDestinationBranch]
        GitHubOAuthToken: !Ref GitHubOAuthToken
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-SimpleRollup"
  LightrailCardsSearch:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-cards-search/2271464/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "KinesisStreamArn": "${LightrailEventStream.Outputs.KinesisStreamArn}",
              "MessageBucket": "${LightrailEventStream.Outputs.DataBucketName}",
              "MessageBucketKmsArn": "${LightrailEventStream.Outputs.EncryptionKeyArn}",
              "ElasticSearchInstanceCount": "${ElasticSearchInstanceCount}",
              "ElasticSearchInstanceType": "${ElasticSearchInstanceType}",
              "ElasticSearchMasterInstanceType": "${ElasticSearchMasterInstanceType}"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
            ElasticSearchInstanceCount:
              !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CardsSearchElasticSearchInstanceCount]
            ElasticSearchInstanceType:
              !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CardsSearchElasticSearchInstanceType]
            ElasticSearchMasterInstanceType:
              !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CardsSearchElasticSearchMasterInstanceType]
        GitHubBranchDest: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CardsSearchDestinationBranch]
        GitHubOAuthToken: !Ref GitHubOAuthToken
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-CardsSearch"

  UserAssumableRoles:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/user-assumable-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantCodePipelineApproverAccess: !GetAtt Groups.Outputs.DevelopersGroupName

  CIResources:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ci-common-resources.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantImageReadWriteAccess: !GetAtt Groups.Outputs.DevelopersGroupName
  SSM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/ssm.yaml

  RoleLookupRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        -
          PolicyName: RoleAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - iam:GetRole
                Resource: "*"
  RoleLookupLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: >
        Backs a CloudFormation Custom Resource for looking up Role Unique IDs (useful in locking down buckets)
      Role: !GetAtt RoleLookupRole.Arn
      Handler: index.handler
      Runtime: nodejs6.10
      Timeout: 15
      Code: ../res/role-id-lookup.zip
  CloudFormationServiceRoleId:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleName: !Ref CloudFormationServiceRoleName
  DevCloudFormationServiceRoleId:
    Type: AWS::CloudFormation::CustomResource
    Condition: EnvIsDev
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleName: DevLightrailInfrastructureCI-CloudFormationServiceRole
  CredentialsRevocationCheckRoleId:
    Type: AWS::CloudFormation::CustomResource
    Condition: CredentialsRevocationCheckRoleNameSet
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleName: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CredentialsRevocationCheckRoleName]
  ServicesRoleId:
    Type: AWS::CloudFormation::CustomResource
    Condition: ServicesRoleNameSet
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleName: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", ServicesRoleName]
  BatchRoleId:
    Type: AWS::CloudFormation::CustomResource
    Condition: BatchRoleNameSet
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleName: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", BatchRoleName]


Outputs:
  WebsiteBucket:
    Description: The Website bucket for the Lightrail website
    Value: !GetAtt LightrailWebsite.Outputs.Bucket
  ReactBucketName:
    Description: The React bucket for the Lightrail React App
    Value: !GetAtt LightrailReact.Outputs.ReactBucketName
  ReactArtifactBucketName:
    Description: The Bucket to put the React Build Artifacts
    Value: !GetAtt LightrailReact.Outputs.ArtifactBucketName
  AppDomain:
    Description: The Domain for the App
    Value: !GetAtt LightrailCloudfront.Outputs.AppDistributionDomain
  ApiDomain:
    Description: The Domain for the API
    Value: !GetAtt LightrailCloudfront.Outputs.ApiDistributionDomain
