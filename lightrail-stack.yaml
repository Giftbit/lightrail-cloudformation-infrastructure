AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Stack"

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - Production
      - Staging
      - Dev
    Default: Dev
  ProductionAccountId:
    Type: String
    Description: The ID of the account to be considered Production
    Default: ""
    AllowedPattern: (\d{12})?
  StagingAccountId:
    Type: String
    Description: The ID of the account to be considered Staging
    Default: ""
    AllowedPattern: (\d{12})?
  DevAccountId:
    Type: String
    Description: The ID of the account to be considered Dev
    Default: ""
    AllowedPattern: (\d{12})?
  EncryptedGitHubOAuthToken:
    Type: String
    Description: GitHub OAuth Token. Used for CI Stacks to access GitHub Repos
    Default: "****"
    NoEcho: true
  DecryptionLambdaArn:
    Type: String
    Description: The ARN that encrypted parameters are passed with
    AllowedPattern: arn:aws:lambda:[a-z0-9-]+:\d{12}:function:[a-zA-Z0-9_-]+
  CloudFormationServiceRoleName:
    Type: String
    Description: >
      The name of the role that performs the CloudFormationServices, so that we can grant it access to
      the secure buckets to update policies, etc.

Mappings:
  Dev:
    us-west-2:
      CombinedEnvRegion: Dev-us-west-2
      ReactBuildArtifactBucketOverride: ""
      SesDomainArns: ""
  Staging:
    us-west-2:
      CombinedEnvRegion: Staging-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      SesDomainArns: ""
      CloudFormationACMCertificateArn: ""
  Production:
    us-west-2:
      CombinedEnvRegion: Production-us-west-2
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      SesDomainArns: ""
  SecureConfig:
    FileNames:
      JWT: authentication_badge_key.json
      DataDog: datadog.json
  Common:
    Dev:
      DomainName: lightraildev.net
      EmailDomainName: lightraildev.net
    Staging:
      DomainName: lightrailstaging.net
      EmailDomainName: lightrailstaging.net
    Production:
      DomainName: lightrail.com
      EmailDomainName: lightrail.com
  CloudFront:
    # These values are generated by running the certificates module in US-East-1.
    # CloudFront requires that ACM certificates be in the AWS Global region, which is US-East-1
    Dev:
      ACMCertificateArn: arn:aws:acm:us-east-1:757264843183:certificate/47732fe5-490c-4071-bf69-27d87d71ac64
    Staging:
      ACMCertificateArn: arn:aws:acm:us-east-1:939876203001:certificate/85077847-3f38-40be-bfbc-6a05e027a638
    Production:
      ACMCertificateArn: arn:aws:acm:us-east-1:212888042843:certificate/1a6c1e31-d5ba-408f-9cf4-c748cbdb12b7
  EcsCluster:
    Dev-us-west-2:
      InstanceType: t2.medium
      MinInstances: 2
      MaxInstances: 4
      SSHKeyName: LightrailDevECS
      ScaleUpRecurrence: "0 15 * * MON-FRI"
      ScaleDownRecurrence: "0 3 * * TUE-SAT"
    Staging-us-west-2:
      InstanceType: t2.medium
      MinInstances: 2
      MaxInstances: 4
      SSHKeyName: LightrailStagingECS
      ScaleUpRecurrence: "0 15 * * MON-FRI"
      ScaleDownRecurrence: "0 3 * * TUE-SAT"
    Production-us-west-2:
      InstanceType: t2.medium
      MinInstances: 3
      MaxInstances: 5
      SSHKeyName: LightrailProductionECS
      ScaleUpRecurrence: ""
      ScaleDownRecurrence: ""
  Services:
    Dev-us-west-2:
      RdsSnapshotId: preprod-migration-20170906
      RoleName: dev-LightrailServices-1D5YCESAG92B3-Role-1D1RKUNL3XBWH
      RdsInstanceClass: db.t2.small
      RdsMultiAZ: false
    Staging-us-west-2:
      RdsSnapshotId: migration-testbed-20170907
      RoleName: staging-LightrailServices-7PYWE3BIY4LC-Role-9KF46YLQSQ30
      RdsInstanceClass: db.t2.small
      RdsMultiAZ: false
    Production-us-west-2:
      RdsSnapshotId: prod-migration-20170911
      RoleName: production-LightrailServices-1KFEHOLF9Z0KA-Role-1JZMIQD5B0TTW
      RdsInstanceClass: db.m3.medium
      RdsMultiAZ: true
  Batch:
    Dev-us-west-2:
      RoleName: dev-LightrailBatch-15T0OX937Q0EO-Role-1ETHK95KYFQ02
    Staging-us-west-2:
      RoleName: staging-LightrailBatch-OJQUGW7YFE0C-Role-1MTHRQ2IDPSUB
    Production-us-west-2:
      RoleName: production-LightrailBatch-QTEEMRIED9WI-Role-OZEW1353U10G
  CredentialsRevocation:
    Dev-us-west-2:
      GitHubBranch: ""
      GitHubBranchDest: ""
      RoleName: dev-Credentials-RestBadgeValidationLambdaRole-PX6EAOSRMU46
      Endpoint: 16wykx9oje.execute-api.us-west-2.amazonaws.com
    Staging-us-west-2:
      GitHubBranch: ""
      GitHubBranchDest: ""
      RoleName: staging-Credentials-RestBadgeValidationLambdaRole-Z6A003BX7XJ4
      Endpoint: w2ntwbf0cg.execute-api.us-west-2.amazonaws.com
    Production-us-west-2:
      GitHubBranch: ""
      GitHubBranchDest: ""
      RoleName: production-Credentials-RestBadgeValidationLambdaRo-WESN8D943Y8F
      Endpoint: bklze8sby7.execute-api.us-west-2.amazonaws.com
  SimpleRollup:
    Dev-us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      Capacity: low
      RoleName: dev-SimpleRollup-RestFunctionRole-UY3YFU4XT00Q
      Endpoint: s6tkfuiyga.execute-api.us-west-2.amazonaws.com
    Staging-us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      Capacity: low
      RoleName: staging-SimpleRollup-RestFunctionRole-UMGA0LJAWL37
      Endpoint: qq578kbti9.execute-api.us-west-2.amazonaws.com
    Production-us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      Capacity: high
      RoleName: production-SimpleRollup-RestFunctionRole-1WHS2OKB6RF1L
      Endpoint: cky1xydze9.execute-api.us-west-2.amazonaws.com
  CardsSearch:
    Dev-us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      ElasticSearchInstanceCount: 2
      ElasticSearchInstanceType: t2.small.elasticsearch
      ElasticSearchMasterInstanceType: none
      RoleName: dev-CardsSearch-RestFunctionRole-1WFJDWKX4AFSD
      Endpoint: hon8eb7zgg.execute-api.us-west-2.amazonaws.com
    Staging-us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      ElasticSearchInstanceCount: 2
      ElasticSearchInstanceType: t2.small.elasticsearch
      ElasticSearchMasterInstanceType: none
      RoleName: staging-CardsSearch-RestFunctionRole-QB1BTL5IJBMS
      Endpoint: s7fqdm27c1.execute-api.us-west-2.amazonaws.com
    Production-us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      ElasticSearchInstanceCount: 2
      ElasticSearchInstanceType: t2.small.elasticsearch
      ElasticSearchMasterInstanceType: t2.small.elasticsearch
      RoleName: production-CardsSearch-RestFunctionRole-42IZL2PQ2ADC
      Endpoint: o0o62rx9nk.execute-api.us-west-2.amazonaws.com
  Kvs:
    Dev-us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      Capacity: low
      RoleName: dev-Kvs-KvsFunctionRole-RLFP80MZ8Z16
      Endpoint: wowqnrwyy0.execute-api.us-west-2.amazonaws.com
    Staging-us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      Capacity: low
      RoleName: staging-Kvs-KvsFunctionRole-16TX23DYH1DQ
      Endpoint: 1tnp8xblpd.execute-api.us-west-2.amazonaws.com
    Production-us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      Capacity: high
      RoleName: production-Kvs-KvsFunctionRole-35C9CNH786LQ
      Endpoint: hl0fjfzg5b.execute-api.us-west-2.amazonaws.com
  Reactions:
    Dev-us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      Capacity: low
      RoleNames: dev-Reactions-IngressFunctionRole-7MU0VX1GHW9O,dev-Reactions-ReactionsRestFunctionRole-19WM63XU0BYE0,dev-Reactions-ReactionWorkerFunctionRole-RDZIU897EZ6J,dev-Reactions-LogsRestFunctionRole-RSTNN570XZIZ
      Endpoint: vsq1f3h973.execute-api.us-west-2.amazonaws.com
    Staging-us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: master
      Capacity: low
      RoleNames: ""
      Endpoint: ""
    Production-us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      Capacity: high
      RoleNames: ""
      Endpoint: ""
  S3EventTranscoder:
    Dev-us-west-2:
      GitHubBranch: dev-ci
      GitHubBranchDest: ""
      LambdaArn: "arn:aws:lambda:us-west-2:757264843183:function:dev-S3EventTranscoder-s3EventTranscoderFunction-14UBP7097F4WC"
      RoleName: "dev-S3EventTranscoder-s3EventTranscoderFunctionRol-HDCE8T5DY5R1"
    Staging-us-west-2:
      GitHubBranch: staging
      GitHubBranchDest: ""
      LambdaArn: ""
      RoleName: ""
    Production-us-west-2:
      GitHubBranch: master
      GitHubBranchDest: ""
      LambdaArn: ""
      RoleName: ""

Conditions:
  RegionIsUSWest2: !Equals [!Ref "AWS::Region", us-west-2]
  RegionIsUSEast1: !Equals [!Ref "AWS::Region", us-east-1]
  EnvIsDev: !Equals [!Ref EnvironmentName, Dev]
  EnvIsDevAndRegionIsUSWest2: !And [{Condition: EnvIsDev}, {Condition: RegionIsUSWest2}]
  EnvIsNotDevAndRegionIsUSWest2: !And [!Not [{Condition: EnvIsDev}], {Condition: RegionIsUSWest2}]
  ProductionAccountIdProvided: !Not [!Equals [!Ref ProductionAccountId, ""]]
  StagingAccountIdProvided: !Not [!Equals [!Ref StagingAccountId, ""]]
  DevAccountIdProvided: !Not [!Equals [!Ref DevAccountId, ""]]
Resources:
  Groups:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2  # Users and groups are global, so we only want it in the primary region
    Properties:
      TemplateURL: ./modules/groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailAlertChannels:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/alert-sns.yaml
  LightrailDns:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dns-zone.yaml
      Parameters:
        DomainName: !FindInMap [Common, !Ref EnvironmentName, DomainName]
  LightrailDnsExternalServices:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dns-external-services.yaml
      Parameters:
        BaseDomain: !GetAtt LightrailDns.Outputs.HostedDomainName
  LightrailCertificates:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/certificates.yaml
      Parameters:
        BaseDomain: !GetAtt LightrailDns.Outputs.HostedDomainName
  LightrailCloudfront:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/cloudfront.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigureAliases: "yes"
        BaseDomainName: !FindInMap [Common, !Ref EnvironmentName, DomainName]
        ViewerCertificateArn: !FindInMap [CloudFront, !Ref EnvironmentName, ACMCertificateArn]
        WebsiteEndpoint: !GetAtt LightrailWebsite.Outputs.Domain
        ReactEndpoint: !GetAtt LightrailReact.Outputs.ReactDomainName
        ServicesEndpoint: !GetAtt LightrailLoadBalancer.Outputs.DNSName
        StatsEndpoint: !FindInMap [SimpleRollup, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Endpoint]
        BatchEndpoint: !GetAtt LightrailLoadBalancer.Outputs.DNSName
        CardsSearchEndpoint: !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Endpoint]
        KvsEndpoint: !FindInMap [Kvs, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Endpoint]
        ReactionsEndpoint: !FindInMap [Reactions, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Endpoint]
  LightrailWebsite:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/website.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        GroupsToGrantWebsiteReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.MarkettingGroupName
            - !GetAtt Groups.Outputs.DevelopersGroupName
  LightrailReact:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/react-app.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BuildArtifactBucketOverride: !FindInMap
          - !Ref EnvironmentName
          - !Ref "AWS::Region"
          - ReactBuildArtifactBucketOverride
        GroupsToGrantReactReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.DevelopersGroupName
        AccountsToGrantBuildArtifactReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantReactBuildArtifactReadOnly: !If
          - EnvIsNotDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
        GroupsToGrantReactBuildArtifactReadWrite: !If
          - EnvIsDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
  LightrailVPC:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/vpc.yaml
      Parameters:
        BastionHostAuthorizedUsersGroup: !GetAtt Groups.Outputs.BastionHostAccessGroupName
        EnvironmentName: !Ref EnvironmentName
        NatInstanceType: t2.nano
        VPCUniqueNumber: 1
  LightrailECSCluster:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ClusterName: !Sub "Lightrail-${AWS::StackName}"
        ClusterInstanceType: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - InstanceType
        ClusterMinInstances: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - MinInstances
        ClusterMaxInstances: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - MaxInstances
        ClusterSSHKeyName:
          !FindInMap [EcsCluster, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], SSHKeyName]
        ClusterScaleUpRecurrence: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - ScaleUpRecurrence
        ClusterScaleDownRecurrence: !FindInMap
          - EcsCluster
          - !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion]
          - ScaleDownRecurrence
        ClusterSecurityGroupIDs: !GetAtt LightrailVPC.Outputs.EcsClusterInstanceSecurityGroupId
        VpcId: !GetAtt LightrailVPC.Outputs.VpcId
        VpcPublicSubnetIds: !GetAtt LightrailVPC.Outputs.PrivateSubnetIds
        Ec2SsmPolicyArn: !GetAtt SSM.Outputs.EC2PolicyArn
        EcrReposToGrantClusterAccess: !Join
          - ","
          -
            - !GetAtt LightrailServices.Outputs.EcrRepoArn
            - !GetAtt LightrailLogstash.Outputs.EcrRepoArn
            - !GetAtt LightrailDatadog.Outputs.EcrRepoArn
            - !GetAtt LightrailBatch.Outputs.EcrRepoArn
  LightrailLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/load-balancer.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcId: !GetAtt LightrailVPC.Outputs.VpcId
        SecurityGroups: !GetAtt LightrailVPC.Outputs.AlbSecurityGroupId
        SubnetIds: !GetAtt LightrailVPC.Outputs.PublicSubnetIds
        BaseDomain: !GetAtt LightrailDns.Outputs.HostedDomainName
  LightrailSecureConfig:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        UserIdsToGrantReadAccess: !Ref LightrailSecureConfigReadAccessRoleIdGrants
        UserIdsToGrantPolicyAdminAccess: !Ref LightrailSecureConfigPolicyAdminAccessRoleIdGrants
  LightrailSecureConfigReadAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        -
          - !FindInMap [CredentialsRevocation, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [Batch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [SimpleRollup, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [Kvs, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
          - !FindInMap [Reactions, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleNames]
          - !FindInMap [S3EventTranscoder, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
  LightrailSecureConfigPolicyAdminAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        -
          - !Ref CloudFormationServiceRoleName
          - !If
            - EnvIsDev
            - DevLightrailInfrastructureCI-CloudFormationServiceRole
            - !Ref "AWS::NoValue"
  LightrailSecureDownload:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        UserIdsToGrantReadAccess: !Ref LightrailSecureDownloadReadAccessRoleIdGrants
        UserIdsToGrantReadWriteAccess: !Ref LightrailSecureDownloadReadWriteAccessRoleIdGrants
        UserIdsToGrantPolicyAdminAccess: !Ref LightrailSecureDownloadPolicyAdminAccessRoleIdGrants
  LightrailSecureDownloadReadAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        -
          - !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
  LightrailSecureDownloadReadWriteAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        -
          - !FindInMap [Batch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RoleName]
  LightrailSecureDownloadPolicyAdminAccessRoleIdGrants:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt RoleLookupLambda.Arn
      RoleNames: !Join
        - ","
        -
          - !Ref CloudFormationServiceRoleName
          - !If
            - EnvIsDev
            - DevLightrailInfrastructureCI-CloudFormationServiceRole
            - !Ref "AWS::NoValue"
  LightrailEventStream:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/event-stream.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        S3EventTranscoderLambdaArn: !FindInMap [S3EventTranscoder, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], LambdaArn]
  LightrailAthena:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/athena.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailLogstash:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/logstash.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NonEmergencyAlertsSnsArn: !GetAtt LightrailAlertChannels.Outputs.NonEmergencySNSArn
        GroupsToGrantDeployAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        AccountsToGrantKibanaFullAccess: !If
          - EnvIsDev
          - !If
            - StagingAccountIdProvided
            - !Ref StagingAccountId
            - !Ref "AWS::NoValue"
          - !Ref "AWS::NoValue"
        AccountsToGrantEcrReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
  LightrailDatadog:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/datadog.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ParentStackName: !Ref "AWS::StackName"
        GroupsToGrantDeployAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        AccountsToGrantEcrReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
  LightrailServices:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/services-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ParentStackName: !Ref "AWS::StackName"
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        EmailDomainName: !FindInMap [Common, !Ref EnvironmentName, EmailDomainName]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        AccountsToGrantEcrReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantDeployAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        RdsInstanceClass: !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RdsInstanceClass]
        RdsInstanceAllocation: 100
        RdsMultiAZ: !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RdsMultiAZ]
        RdsSnapshotId: !FindInMap [Services, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], RdsSnapshotId]
        VpcRdsSubnetIds: !GetAtt LightrailVPC.Outputs.RdsSubnetIds
        VpcHostedZoneId: !GetAtt LightrailVPC.Outputs.VpcHostedZoneId
        VpcRdsSecurityGroupIds: !GetAtt LightrailVPC.Outputs.RdsSecurityGroupId
        LoadBalancingServiceRoleArn: !GetAtt LightrailLoadBalancer.Outputs.EcsLoadBalancingServiceRoleArn
      Tags:
        -
          Key: Service
          Value: Services
  LightrailBatch:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/batch-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ParentStackName: !Ref "AWS::StackName"
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        EmailDomainName: !FindInMap [Common, !Ref EnvironmentName, EmailDomainName]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        AccountsToGrantEcrReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantDeployAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        LoadBalancingServiceRoleArn: !GetAtt LightrailLoadBalancer.Outputs.EcsLoadBalancingServiceRoleArn
      Tags:
        -
          Key: Service
          Value: Batch
  LightrailCredentials:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/credentials/5b24a34/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub >
          {
            "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
            "SecureConfigKMSArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}"
          }
        GitHubBranchDest: !FindInMap [CredentialsRevocation, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-Credentials"
  LightrailSimpleRollup:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-simple-rollup/d958a08/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "KinesisStreamArn": "${LightrailEventStream.Outputs.KinesisStreamArn}",
              "MessageBucket": "${LightrailEventStream.Outputs.DataBucketName}",
              "MessageBucketKmsArn": "${LightrailEventStream.Outputs.EncryptionKeyArn}",
              "Capacity": "${Capacity}"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
            Capacity: !FindInMap [SimpleRollup, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Capacity]
        GitHubBranch: !FindInMap [SimpleRollup, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranch]
        GitHubBranchDest: !FindInMap [SimpleRollup, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-SimpleRollup"
      Tags:
        -
          Key: Service
          Value: SimpleRollup
  LightrailS3EventTranscoder:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/s3-event-transcoder/b4d6108/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "S3EventSourceBucket": "${LightrailEventStream.Outputs.DataBucketName}",
              "S3EventSourceBucketKmsArn": "${LightrailEventStream.Outputs.EncryptionKeyArn}",
              "S3EventDestinationBucket": "${LightrailAthena.Outputs.DataBucketName}",
              "S3EventDestinationBucketKmsArn": "${LightrailAthena.Outputs.EncryptionKeyArn}"
            }
          -
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
        GitHubBranch: !FindInMap [S3EventTranscoder, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranch]
        GitHubBranchDest: !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-S3EventTranscoder"
      Tags:
        -
          Key: Service
          Value: S3EventTranscoder
  LightrailCardsSearch:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-cards-search/2271464/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "KinesisStreamArn": "${LightrailEventStream.Outputs.KinesisStreamArn}",
              "MessageBucket": "${LightrailEventStream.Outputs.DataBucketName}",
              "MessageBucketKmsArn": "${LightrailEventStream.Outputs.EncryptionKeyArn}",
              "ElasticSearchInstanceCount": "${ElasticSearchInstanceCount}",
              "ElasticSearchInstanceType": "${ElasticSearchInstanceType}",
              "ElasticSearchMasterInstanceType": "${ElasticSearchMasterInstanceType}"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
            ElasticSearchInstanceCount:
              !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], ElasticSearchInstanceCount]
            ElasticSearchInstanceType:
              !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], ElasticSearchInstanceType]
            ElasticSearchMasterInstanceType:
              !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], ElasticSearchMasterInstanceType]
        GitHubBranch: !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranch]
        GitHubBranchDest: !FindInMap [CardsSearch, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-CardsSearch"
      Tags:
        -
          Key: Service
          Value: CardsSearch
  LightrailKvs:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-kvs/fcc0c03/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "Capacity": "${Capacity}"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            Capacity: !FindInMap [Kvs, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Capacity]
        GitHubBranch: !FindInMap [Kvs, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranch]
        GitHubBranchDest: !FindInMap [Kvs, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-Kvs"
      Tags:
        -
          Key: Service
          Value: KVS
  LightrailReactions:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: https://raw.githubusercontent.com/Giftbit/giftbit-reactions/2d0773665c3cbdd70cf536f9eec861a6cc1e3251/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub
          - >
            {
              "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
              "SecureConfigKmsArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}",
              "SecureConfigKeyJwt": "${SecureConfigFileNameJwt}",
              "SecureConfigKeyDataDog": "${SecureConfigFileNameDataDog}",
              "Capacity": "${Capacity}",
              "RestRootUrl": "https://api.${DomainName}/v1/"
            }
          -
            SecureConfigFileNameJwt: !FindInMap [SecureConfig, FileNames, JWT]
            SecureConfigFileNameDataDog: !FindInMap [SecureConfig, FileNames, DataDog]
            Capacity: !FindInMap [Reactions, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Capacity]
            DomainName: !GetAtt LightrailDns.Outputs.HostedDomainName
        GitHubBranch: !FindInMap [Reactions, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranch]
        GitHubBranchDest: !FindInMap [Reactions, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], GitHubBranchDest]
        GitHubOAuthToken: !GetAtt GitHubOAuthToken.DecryptedValue
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
        ProjectName: !Sub "${AWS::StackName}-Reactions"
      Tags:
        -
          Key: Service
          Value: Reactions
  LightrailDevArtifacts:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/dev-artifacts.yaml

  UserAssumableRoles:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/user-assumable-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantCodePipelineApproverAccess: !GetAtt Groups.Outputs.DevelopersGroupName
        GroupsToGrantInfrastructureAdminAccess: !If [EnvIsDevAndRegionIsUSWest2, !GetAtt Groups.Outputs.DevelopersGroupName, !Ref "AWS::NoValue"]

  CIResources:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ci-common-resources.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantImageReadWriteAccess: !GetAtt Groups.Outputs.DevelopersGroupName
  SSM:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ssm.yaml

  RoleLookupRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        -
          PolicyName: RoleAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - iam:GetRole
                Resource: "*"
  RoleLookupLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: >
        Backs a CloudFormation Custom Resource for looking up Role Unique IDs (useful in locking down buckets)
      Role: !GetAtt RoleLookupRole.Arn
      Handler: index.handler
      Runtime: nodejs6.10
      Timeout: 15
      Code: ../res/role-id-lookup.zip
  GitHubOAuthToken:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref DecryptionLambdaArn
      EncryptedValue: !Sub "kms:${EncryptedGitHubOAuthToken}"

Outputs:
  AppDomain:
    Description: The App Domain
    Value: !GetAtt LightrailCloudfront.Outputs.AppDomain
  ApiDomain:
    Description: The API Domain
    Value: !GetAtt LightrailCloudfront.Outputs.ApiDomain
  WebsiteBucket:
    Description: The Website bucket for the Lightrail website
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailWebsite.Outputs.Bucket
  ReactBucketName:
    Description: The React bucket for the Lightrail React App
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailReact.Outputs.ReactBucketName
  ReactArtifactBucketName:
    Description: The Bucket to put the React Build Artifacts
    Condition: RegionIsUSWest2
    Value: !GetAtt LightrailReact.Outputs.ArtifactBucketName
  CredentialsCheckEndpoint:
    Description: The Domain for credentials checks
    Value: !FindInMap [CredentialsRevocation, !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CombinedEnvRegion], Endpoint]
