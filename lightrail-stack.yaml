AWSTemplateFormatVersion: "2010-09-09"
Description: "Lightrail Stack"

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - Production
      - Staging
      - Dev
    Default: Dev
  ProductionAccountId:
    Type: String
    Description: The ID of the account to be considered Production
    Default: ""
    AllowedPattern: (\d{12})?
  StagingAccountId:
    Type: String
    Description: The ID of the account to be considered Staging
    Default: ""
    AllowedPattern: (\d{12})?
  DevAccountId:
    Type: String
    Description: The ID of the account to be considered Dev
    Default: ""
    AllowedPattern: (\d{12})?
  EncryptedGitHubOAuthToken:
    Type: String
    Description: GitHub OAuth Token. Used for CI Stacks to access GitHub Repos
    Default: "****"
    NoEcho: true
  DecryptionRoleArn:
    Type: String
    Description: The Role to use for decrypting Encrypted parameters.
    NoEcho: true

Mappings:
  Dev:
    us-west-2:
      ReactBuildArtifactBucketOverride: ""
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn:
        arn:aws:acm:us-east-1:757264843183:certificate/5ac83a3b-1f05-4756-bd3a-3a4705846b53
  Staging:
    us-west-2:
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn: ""
  Production:
    us-west-2:
      ReactBuildArtifactBucketOverride: dev-lightrailreact-1xyn4dsi4a-buildartifactbucket-17n7679jwqtyw
      AppAliases: ""
      ApiAliases: ""
      SesDomainArns: ""
      CloudFormationACMCertificateArn: ""

Conditions:
  RegionIsUSWest2: !Equals [!Ref "AWS::Region", us-west-2]
  RegionIsUSEast1: !Equals [!Ref "AWS::Region", us-east-1]
  EnvIsDev: !Equals [!Ref EnvironmentName, Dev]
  EnvIsDevAndRegionIsUSWest2: !And [{Condition: EnvIsDev}, {Condition: RegionIsUSWest2}]
  EnvIsNotDevAndRegionIsUSWest2: !And [!Not [{Condition: EnvIsDev}], {Condition: RegionIsUSWest2}]
  ProductionAccountIdProvided: !Not [!Equals [!Ref ProductionAccountId, ""]]
  StagingAccountIdProvided: !Not [!Equals [!Ref StagingAccountId, ""]]
  DevAccountIdProvided: !Not [!Equals [!Ref DevAccountId, ""]]
Resources:
  Groups:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2  # Users and groups are global, so we only want it in the primary region
    Properties:
      TemplateURL: ./modules/groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailAlertChannels:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/alert-sns.yaml
  LightrailCertificates:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSEast1
    Properties:
      TemplateURL: ./modules/certificates.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailCloudfront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/cloudfront.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        AppAliases: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", AppAliases]
        ApiAliases: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", ApiAliases]
        ViewerCertificateArn: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", CloudFormationACMCertificateArn]
        WebsiteEndpoint: !GetAtt LightrailWebsite.Outputs.Domain
        ReactEndpoint: !GetAtt LightrailReact.Outputs.ReactDomainName
        ServicesEndpoint: "preprodhttpservices.giftbit.com"
        StatsEndpoint: "0dp3zkwhxe.execute-api.us-west-2.amazonaws.com"
        BatchEndpoint: "preprodbatchservice.giftbit.com"
        CardsSearchEndpoint: "9te30f224k.execute-api.us-west-2.amazonaws.com"
  LightrailWebsite:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/website.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        GroupsToGrantWebsiteReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.MarkettingGroupName
            - !GetAtt Groups.Outputs.DevelopersGroupName

  LightrailReact:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/react-app.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        BuildArtifactBucketOverride: !FindInMap
          - !Ref EnvironmentName
          - !Ref "AWS::Region"
          - ReactBuildArtifactBucketOverride
        GroupsToGrantReactReadWrite: !Join
          - ","
          -
            - !GetAtt Groups.Outputs.DevelopersGroupName
        AccountsToGrantBuildArtifactReadAccess: !Join
          - ","
          -
            - !If
              - ProductionAccountIdProvided
              - !Ref ProductionAccountId
              - !Ref AWS::NoValue
            - !If
              - StagingAccountIdProvided
              - !Ref StagingAccountId
              - !Ref AWS::NoValue
            - !If
              - DevAccountIdProvided
              - !Ref DevAccountId
              - !Ref AWS::NoValue
        GroupsToGrantReactBuildArtifactReadOnly: !If
          - EnvIsNotDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
        GroupsToGrantReactBuildArtifactReadWrite: !If
          - EnvIsDevAndRegionIsUSWest2
          - !GetAtt Groups.Outputs.DevelopersGroupName
          - ""
  LightrailVPC:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/vpc.yaml
      Parameters:
        BastionHostAuthorizedUsersGroup: Developers
        EnvironmentName: !Ref EnvironmentName
        NatInstanceType: t2.nano
        VPCUniqueNumber: 1
  LightrailECSCluster:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ClusterName: lightrail-dev
        ClusterMinInstances: 1
        ClusterMaxInstances: 3
        ClusterInstanceType: t2.nano
        ClusterSSHKeyName: LightrailDevECS
        ClusterSecurityGroupIDs: !GetAtt LightrailVPC.Outputs.EcsClusterInstanceSecurityGroupId
        ClusterScaleUpRecurrence: "0 15 * * MON-FRI"
        ClusterScaleDownRecurrence: "0 3 * * TUE-SAT"
        VpcId: !GetAtt LightrailVPC.Outputs.VpcId
        VpcPublicSubnetIds: !GetAtt LightrailVPC.Outputs.PrivateSubnetIds
        Ec2SsmPolicyArn: !GetAtt SSM.Outputs.EC2PolicyArn
  LightrailSecureConfig:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailSecureDownload:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/secure-bucket.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailEventStream:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/event-stream.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailLogstash:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/logstash.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NonEmergencyAlertsSnsArn: !GetAtt LightrailAlertChannels.Outputs.NonEmergencySNSArn
  LightrailDatadog:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/datadog.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  LightrailServices:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/services-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        SesDomainArns: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SesDomainArns]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        RemoteECRRepositoryArn: ""
        RdsInstanceClass: db.t2.small
        RdsInstanceAllocation: 100
        RdsMultiAZ: true
        RdsSnapshotId: ""
        VpcRdsSubnetIds: !GetAtt LightrailVPC.Outputs.RdsSubnetIds
        VpcHostedZoneId: !GetAtt LightrailVPC.Outputs.VpcHostedZoneId
        VpcRdsSecurityGroupIds: !GetAtt LightrailVPC.Outputs.RdsSecurityGroupId
      Tags:
        -
          Key: Service
          Value: Services
  LightrailBatch:
    Type: AWS::CloudFormation::Stack
    Condition: EnvIsDevAndRegionIsUSWest2
    Properties:
      TemplateURL: ./modules/batch-service.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ConfigurationBucketArn: !GetAtt LightrailSecureConfig.Outputs.BucketArn
        ConfigurationBucketKeyArn: !GetAtt LightrailSecureConfig.Outputs.EncryptionKeyArn
        SecureDownloadBucketArn: !GetAtt LightrailSecureDownload.Outputs.BucketArn
        SecureDownloadBucketKeyArn: !GetAtt LightrailSecureDownload.Outputs.EncryptionKeyArn
        SesDomainArns: !FindInMap [!Ref EnvironmentName, !Ref "AWS::Region", SesDomainArns]
        KinesisStreamArn: !GetAtt LightrailEventStream.Outputs.KinesisStreamArn
        RemoteECRRepositoryArn: ""
      Tags:
        -
          Key: Service
          Value: Batch
  Credentials:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    DependsOn: CIResources
    Properties:
      # yamllint disable-line rule:line-length
      TemplateURL: https://raw.githubusercontent.com/Giftbit/credentials/5b24a34/infrastructure/ci.yaml
      Parameters:
        ProjectParameterOverrides: !Sub >
          {
            "SecureConfigBucket": "${LightrailSecureConfig.Outputs.BucketName}",
            "SecureConfigKMSArn": "${LightrailSecureConfig.Outputs.EncryptionKeyArn}"
          }
        GitHubOAuthToken: !Ref GitHubOAuthToken
        CodeBuildImageNodeSSH: !GetAtt CIResources.Outputs.CodebuildImageNodeSSH
        CiKeysAccessRoleArn: !GetAtt CIResources.Outputs.KeysAccessRoleArn
        CiKeysBucketName: !GetAtt CIResources.Outputs.KeysBucketName
  UserAssumableRoles:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/user-assumable-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
        GroupsToGrantCodePipelineApproverAccess: !GetAtt Groups.Outputs.DevelopersGroupName

  CIResources:
    Type: AWS::CloudFormation::Stack
    Condition: RegionIsUSWest2
    Properties:
      TemplateURL: ./modules/ci-common-resources.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProductionAccountId: !Ref ProductionAccountId
        StagingAccountId: !Ref StagingAccountId
        DevAccountId: !Ref DevAccountId
  SSM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./modules/ssm.yaml

Outputs:
  WebsiteBucket:
    Description: The Website bucket for the Lightrail website
    Value: !GetAtt LightrailWebsite.Outputs.Bucket
  ReactBucketName:
    Description: The React bucket for the Lightrail React App
    Value: !GetAtt LightrailReact.Outputs.ReactBucketName
  ReactArtifactBucketName:
    Description: The Bucket to put the React Build Artifacts
    Value: !GetAtt LightrailReact.Outputs.ArtifactBucketName
  AppDomain:
    Description: The Domain for the App
    Value: !GetAtt LightrailCloudfront.Outputs.AppDistributionDomain
  ApiDomain:
    Description: The Domain for the API
    Value: !GetAtt LightrailCloudfront.Outputs.ApiDistributionDomain
